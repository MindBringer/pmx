{
  "name": "Emit Event",
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "a9a40532-2576-46d2-9fd1-8f3988348e16",
      "name": "Post_Event"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{\n  // Bevorzugt $json.events, aber:\n  // 1) korrigiere Singular '/event' -> '/events'\n  // 2) wenn relativ (\"/...\"), prepend Base-URL\n  // 3) Fallback aus job_id bauen\n  (() => {\n    const base = 'http://rag-backend:8082'; // oder 'https://ai.local'\n    const raw  = $json.events || ($json.job_id ? `/rag/jobs/${$json.job_id}/events` : '');\n    if (!raw) return base + '/rag/jobs/unknown/events';\n    const fixed = raw.replace(/\\/event(\\/|$)/i, '/events$1');   // singular -> plural\n    if (/^https?:\\/\\//i.test(fixed)) return fixed;             // already absolute\n    return base + fixed;                                       // make absolute\n  })()\n}}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.__event }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        224,
        0
      ],
      "id": "7bc89f8b-6c69-4f4c-ac50-746dfdc3d6fe",
      "name": "Post Event",
      "onError": "continueRegularOutput"
    }
  ],
  "pinData": {},
  "connections": {
    "Post_Event": {
      "main": [
        [
          {
            "node": "Post Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0ad0ed56-bf4f-4fa2-a090-f6099008a487",
  "meta": {
    "instanceId": "561919f222f248fefb13e03c84adfc7356dad806feb0489acfa0f3688a2a1852"
  },
  "id": "OjD3jrVzeEsAqnr7",
  "tags": []
}