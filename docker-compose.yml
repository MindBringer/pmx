services:
  ollama:
    image: ollama/ollama:latest
    ports:
      - "${OLLAMA_PORT}:11434"
    volumes:
      - ${OLLAMA_DATA}:/root/.ollama
    environment:
      - OLLAMA_MODELS=${OLLAMA_MODELS}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434"]
      interval: 30s
      timeout: 10s
      retries: 5

  vllm:
    image: vllm/vllm-openai-cpu:0.9.1
    # kein build:‑Block nötig – wird vom install.sh vorher gebaut
    environment:
      - HUGGING_FACE_HUB_TOKEN=${HUGGINGFACE_TOKEN}
      - VLLM_CPU_KVCACHE_SPACE=12     # RAM‑Größe (GiB) anpassen
      - VLLM_LOGGING_LEVEL=INFO
    command: >
      python -m vllm.entrypoints.openai.api_server
        --model ${VLLM_MODEL}
        --device cpu
        --dtype bfloat16
        --host 0.0.0.0
        --port 8000
    volumes:
      - ${VLLM_DATA}:/root/.cache/huggingface
    ports:
      - "${VLLM_PORT}:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  gateway:
    build: ./gateway
    ports:
      - "${GATEWAY_PORT}:8000"
    environment:
      - OLLAMA_URL=http://ollama:11434
      - VLLM_URL=http://vllm:8000
    depends_on:
      ollama:
        condition: service_healthy
      vllm:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  ollama_data:
  vllm_data:
