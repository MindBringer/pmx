FROM nvidia/cuda:12.4.1-runtime-ubuntu22.04

# System deps inkl. Compiler + Python-Header für C-Extensions (webrtcvad)
RUN apt-get update && apt-get install -y --no-install-recommends \
    ffmpeg git python3 python3-pip python3-dev build-essential \
 && rm -rf /var/lib/apt/lists/*

WORKDIR /app
ENV PYTHONUNBUFFERED=1 PYTHONPATH=/app PIP_NO_CACHE_DIR=1

# Aktuell nutzt du rag-backend/requirements.txt (geht, ist aber "fett")
COPY rag-backend/requirements.txt /app/requirements.txt
# prefer-binary → nimm Wheels, wenn verfügbar (spart Compiles)
RUN python3 -m pip install -U pip && \
    pip3 install --prefer-binary -r /app/requirements.txt

# Code kopieren und app als Package absichern
COPY rag-backend/app /app/app
RUN [ -f /app/app/__init__.py ] || touch /app/app/__init__.py

# Kleine Audio-API zur Laufzeit erzeugen und NUR den Transcribe/Speaker-Router mounten
RUN printf '%s\n' \
'from fastapi import FastAPI' \
'try:' \
'    from app.transcribe import router as transcribe_router' \
'except ModuleNotFoundError:' \
'    from app.routers.transcribe import router as transcribe_router' \
'' \
'app = FastAPI(title="audio-api")' \
'app.include_router(transcribe_router, prefix="")' \
'' \
'@app.get("/health")' \
'def health():' \
'    return {"status":"ok"}' \
> /app/audio_main.py

EXPOSE 6080
# WICHTIG: audio_main.py liegt auf /app
ENTRYPOINT ["uvicorn","audio_main:app","--host","0.0.0.0","--port","6080"]
