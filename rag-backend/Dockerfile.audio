FROM nvidia/cuda:12.4.1-runtime-ubuntu22.04
RUN apt-get update && apt-get install -y --no-install-recommends \
    ffmpeg git python3 python3-pip python3-dev build-essential \
 && rm -rf /var/lib/apt/lists/*

WORKDIR /app
ENV PYTHONUNBUFFERED=1 PYTHONPATH=/app PIP_NO_CACHE_DIR=1

COPY rag-backend/requirements.audio.txt /app/requirements.txt
# Falls Torch nÃ¶tig ist und du bei CUDA 12.4 bleibst, explizit cu121-Wheels nutzen:
# (nur dann die beiden Torch-Zeilen in requirements.audio.txt einkommentieren)
RUN python3 -m pip install -U pip && \
    pip3 install --prefer-binary -r /app/requirements.txt -f https://download.pytorch.org/whl/cu121

COPY rag-backend/app /app/app
RUN [ -f /app/app/__init__.py ] || touch /app/app/__init__.py

# Mini-API wie oben
RUN printf '%s\n' \
'from fastapi import FastAPI' \
'try:' \
'    from app.transcribe import router as transcribe_router' \
'except ModuleNotFoundError:' \
'    from app.routers.transcribe import router as transcribe_router' \
'' \
'app = FastAPI(title="audio-api")' \
'app.include_router(transcribe_router, prefix="")' \
'@app.get("/health")' \
'def health():' \
'    return {"status":"ok"}' \
> /app/audio_main.py

EXPOSE 6080
ENTRYPOINT ["uvicorn","audio_main:app","--host","0.0.0.0","--port","6080"]
